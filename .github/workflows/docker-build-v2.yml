name: Docker Build and Push v2
run-name: Docker Build and Push @${{ inputs.release_type }} by @${{ github.actor }}

on:
  workflow_call:
    inputs:
      main_version:
        required: false
        type: string
        description: "Main version to tag images with. If not provided, will be extracted from code."
      base_version:
        required: false
        type: string
        description: "Base version to tag images with. If not provided, will be extracted from code."
      release_type:
        required: true
        type: string
        description: "Release type. One of 'main', 'main-ep', 'base', 'main-all'."
      pre_release:
        required: false
        type: boolean
        default: false
      ref:
        required: true
        type: string
        description: "Ref to check out (branch, tag, or commit). This is required -- it specifies where the source code for the release is located."

env:
  PYTHON_VERSION: "3.13"

jobs:
  # Base package builds
  build-base:
    name: Build Base Package
    if: ${{ inputs.release_type == 'base' }}
    runs-on: [self-hosted, linux, ARM64, langflow-ai-arm64-40gb]
    steps:
      - name: Check out the code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}

      - name: Get version
        id: version
        run: |
          if [ -n "${{ inputs.base_version }}" ]; then
            echo "Using provided base version: ${{ inputs.base_version }}"
            echo version=${{ inputs.base_version }} >> $GITHUB_OUTPUT
          else
            echo "Extracting base version from code"
            version=$(uv tree | grep 'langflow-base' | awk '{print $3}' | sed 's/^v//' | head -n 1)
            echo "Extracted base version: $version"
            echo version=$version >> $GITHUB_OUTPUT
          fi

      - name: Set tags
        id: tags
        run: |
          version="${{ steps.version.outputs.version }}"
          echo "docker_tags=langflowai/langflow:base-${version},langflowai/langflow:base-latest" >> $GITHUB_OUTPUT
          echo "ghcr_tags=ghcr.io/langflow-ai/langflow:base-${version},ghcr.io/langflow-ai/langflow:base-latest" >> $GITHUB_OUTPUT

      - name: Docker cleanup
        run: |
          docker system prune -af --volumes || true
          docker buildx prune -af || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TEMP_GHCR_TOKEN}}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_base.Dockerfile
          tags: ${{ steps.tags.outputs.docker_tags }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_base.Dockerfile
          tags: ${{ steps.tags.outputs.ghcr_tags }}
          platforms: linux/amd64,linux/arm64

  # Main package builds
  build-main:
    name: Build Main Package
    if: ${{ inputs.release_type == 'main' }}
    runs-on: [self-hosted, linux, ARM64, langflow-ai-arm64-40gb]
    steps:
      - name: Check out the code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}

      - name: Get version
        id: version
        run: |
          if [ -n "${{ inputs.main_version }}" ]; then
            echo "Using provided main version: ${{ inputs.main_version }}"
            echo version=${{ inputs.main_version }} >> $GITHUB_OUTPUT
          else
            echo "Extracting main version from code"
            version=$(uv tree | grep 'langflow' | grep -v 'langflow-base' | awk '{print $2}' | sed 's/^v//')
            echo "Extracted main version: $version"
            echo version=$version >> $GITHUB_OUTPUT
          fi

      - name: Set tags
        id: tags
        run: |
          version="${{ steps.version.outputs.version }}"
          if [[ "${{ inputs.pre_release }}" == "true" ]]; then
            echo "docker_tags=langflowai/langflow:${version}" >> $GITHUB_OUTPUT
            echo "ghcr_tags=ghcr.io/langflow-ai/langflow:${version}" >> $GITHUB_OUTPUT
          else
            echo "docker_tags=langflowai/langflow:${version},langflowai/langflow:latest" >> $GITHUB_OUTPUT
            echo "ghcr_tags=ghcr.io/langflow-ai/langflow:${version},ghcr.io/langflow-ai/langflow:latest" >> $GITHUB_OUTPUT
          fi

      - name: Docker cleanup
        run: |
          docker system prune -af --volumes || true
          docker buildx prune -af || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TEMP_GHCR_TOKEN}}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push.Dockerfile
          tags: ${{ steps.tags.outputs.docker_tags }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push.Dockerfile
          tags: ${{ steps.tags.outputs.ghcr_tags }}
          platforms: linux/amd64,linux/arm64

  # Main EP builds
  build-main-ep:
    name: Build Main EP Package
    if: ${{ inputs.release_type == 'main-ep' }}
    runs-on: [self-hosted, linux, ARM64, langflow-ai-arm64-40gb]
    steps:
      - name: Check out the code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}

      - name: Get version
        id: version
        run: |
          if [ -n "${{ inputs.main_version }}" ]; then
            echo "Using provided main version: ${{ inputs.main_version }}"
            echo version=${{ inputs.main_version }} >> $GITHUB_OUTPUT
          else
            echo "Extracting main version from code"
            version=$(uv tree | grep 'langflow' | grep -v 'langflow-base' | awk '{print $2}' | sed 's/^v//')
            echo "Extracted main version: $version"
            echo version=$version >> $GITHUB_OUTPUT
          fi

      - name: Set tags
        id: tags
        run: |
          version="${{ steps.version.outputs.version }}"
          echo "docker_tags=langflowai/langflow-ep:${version},langflowai/langflow-ep:latest" >> $GITHUB_OUTPUT
          echo "ghcr_tags=ghcr.io/langflow-ai/langflow-ep:${version},ghcr.io/langflow-ai/langflow-ep:latest" >> $GITHUB_OUTPUT

      - name: Docker cleanup
        run: |
          docker system prune -af --volumes || true
          docker buildx prune -af || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TEMP_GHCR_TOKEN}}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_ep.Dockerfile
          tags: ${{ steps.tags.outputs.docker_tags }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_ep.Dockerfile
          tags: ${{ steps.tags.outputs.ghcr_tags }}
          platforms: linux/amd64,linux/arm64

  # Main All builds
  build-main-all:
    name: Build Main All Package
    if: ${{ inputs.release_type == 'main-all' }}
    runs-on: [self-hosted, linux, ARM64, langflow-ai-arm64-40gb]
    steps:
      - name: Check out the code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.ref }}

      - name: Get version
        id: version
        run: |
          if [ -n "${{ inputs.main_version }}" ]; then
            echo "Using provided main version: ${{ inputs.main_version }}"
            echo version=${{ inputs.main_version }} >> $GITHUB_OUTPUT
          else
            echo "Extracting main version from code"
            version=$(uv tree | grep 'langflow' | grep -v 'langflow-base' | awk '{print $2}' | sed 's/^v//')
            echo "Extracted main version: $version"
            echo version=$version >> $GITHUB_OUTPUT
          fi

      - name: Set tags
        id: tags
        run: |
          version="${{ steps.version.outputs.version }}"
          echo "docker_tags=langflowai/langflow-all:${version},langflowai/langflow-all:latest" >> $GITHUB_OUTPUT
          echo "ghcr_tags=ghcr.io/langflow-ai/langflow-all:${version},ghcr.io/langflow-ai/langflow-all:latest" >> $GITHUB_OUTPUT

      - name: Docker cleanup
        run: |
          docker system prune -af --volumes || true
          docker buildx prune -af || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TEMP_GHCR_TOKEN}}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_with_extras.Dockerfile
          tags: ${{ steps.tags.outputs.docker_tags }}
          platforms: linux/amd64,linux/arm64

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./docker/build_and_push_with_extras.Dockerfile
          tags: ${{ steps.tags.outputs.ghcr_tags }}
          platforms: linux/amd64,linux/arm64